--USERNAME: User11--SQL code for the creation of the tables and the addition of data for The Beckenham Walkers database system.--A new schema called 'walkdb' has been created to store all the new tables.create schema walkdb;--Creating the tables for each entity--route, cafe, walk event, instructor, walk attendee, member, meeting point, carpark--Route entitycreate table walkdb.route  (    route_id int not null,    name varchar(50) not null,    difficulty char(1) not null,    length double precision,    cafe_id int not null    );--Unique constraintalter table walkdb.route add constraint route_unique unique(name, difficulty);--Type constraintalter table walkdb.route add constraint difficulty_types check (difficulty = 'E' OR difficulty = 'M' OR difficulty = 'S');--Creates the geometry column to hold the spatial dataalter table walkdb.route add column location geometry(Linestring, 27700);--Primary and foreign keyalter table walkdb.route add constraint route_pkey primary key (route_id);alter table walkdb.route  add constraint route_cafe_fkey foreign key (cafe_id) references walkdb.cafe (cafe_id);--A trigger function to generate the route lengthcreate trigger route_length_update  after insert or update of location on walkdb.route  for each row  execute procedure update_length();create or replace function update_length() returns trigger as $body$  begin  update walkdb.route set length = st_length(location)    where route_id = new.route_id;    return null;    end;    $body$ language 'plpgsql';--Cafe entitycreate table walkdb.cafe  (    cafe_id int not null,    name varchar(50) not null,    postcode varchar(7) not null,    town varchar(20)    );--Unique constraintalter table walkdb.cafe add constraint cafe_unique unique(name, postcode);--Creates the geometry column to hold the spatial dataalter table walkdb.cafe add column location geometry(POLYHEDRALSURFACE, 27700, 3,1);--To force the geometry column to use 3D coordinatesalter table walkdb.cafe   alter column location type geometry(POLYHEDRALSURFACEZ)    using ST_Force_3D(location);--Primary keyalter table walkdb.cafe add constraint cafe_pkey primary key (cafe_id);--Member entitycreate table walkdb.member  (    member_id int not null,    first_name varchar(20) not null,    last_name varchar(20) not null,    dob date not null,    email_address varchar(254) not null,    phone_number varchar(11) not null    );--Unique constraintalter table walkdb.member add constraint member_unique unique(first_name, last_name, phone_number);--Constriant to ensure the member's age is over 18alter table walkdb.member add constraint member_age check (dob < (current_date - interval '18' year));--Primary keyalter table walkdb.member add constraint member_pkey primary key (member_id);--Instructor entitycreate table walkdb.instructor  (    instructor_id int not null,    first_name varchar(20) not null,    last_name varchar(20) not null,    email_address varchar(254) not null,    phone_number varchar(11) not null    );--Unique constraintalter table walkdb.instructor add constraint instructor_unique unique(first_name, last_name, phone_number);--Primary keyalter table walkdb.instructor add constraint instructor_pkey primary key (instructor_id);--Meeting Point entitycreate table walkdb.meeting_point  (    postcode char(7) not null,    name varchar(50) not null,    town varchar(20) not null,    county varchar(15)    carpark_id int not null    );--Creates the geometry column to hold the spatial dataalter table walkdb.meeting_point add column location geometry(Point, 27700);--Primary and foreign keyalter table walkdb.meeting_point add constraint meeting_point_pkey primary key (postcode);alter table walkdb.meeting_point  add constraint meeting_point_carpark_fkey foreign key (carpark_id) references walkdb.carpark (carpark_id);--Carpark entitycreate table walkdb.carpark  (    carpark_id int not null,    name varchar(50) not null,    price_per_hour double precision not null,    postcode varchar(7)    );--Unique constraintalter table walkdb.carpark add constraint carpark_unique unique(name);--Creates the geometry column to hold the spatial dataalter table walkdb.carpark add column location geometry(Polygon, 27700);--Primary keyalter table walkdb.carpark add constraint carpark_pkey primary key (carpark_id);--Walk Event entitycreate table walkdb.walk_event  (    walk_date date not null,    start_time time not null,    route int,    instructor int,    meeting_point char(7)    );--Primary and foreign keysalter table walkdb.walk_event add constraint walk_event_pkey primary key (walk_date);alter table walkdb.walk_event  add constraint walk_event_route_fkey foreign key (route) references walkdb.route (route_id);alter table walkdb.walk_event  add constraint walk_event_instrctor_fkey foreign key (instructor) references walkdb.instructor (instructor_id);alter table walkdb.walk_event  add constraint walk_event_meeting_point_fkey foreign key (meeting_point) references walkdb.meeting_point (postcode);--Walk Attendee entitycreate table walkdb.walk_attendee  (    walk_id date not null,    member_id int not null    );--Unique constraintalter table walkdb.walk_attendee add constraint walk_attendee_unique unique(walk_id, member_id);--Foreign Keysalter table walkdb.walk_attendee add constraint walk_attendee_walk_id_fkey foreign key (walk_id) references walkdb.walk_event (walk_date);alter table walkdb.walk_attendee add constraint walk_attendee_member_id_fkey foreign key (member_id) references walkdb.member (member_id);--Populating each table with a sample of data.--5 MEMBERSinsert into walkdb.member values   (1, 'Nicola', 'Critten', '1995-12-20', 'nicolacritten@hotmail.com', 07756233454),  (2, 'Kate', 'Halpin', '1987-04-17', 'k.halpin@gmail.co.uk', 02086547855),  (3, 'Derek', 'Harvey', '1965-06-26', 'derek_harvey@hotmail.co.uk', 07645234980),  (4, 'Laura', 'Andrews', '1990-08-19', 'lauraandrews@hotmail.co.uk', 07358922080),  (5, 'Sam', 'Andrews', '1987-06-12', 'sam.andrewsss@sky.co.uk', 07745336729);--3 INSTRUCTORSinsert into walkdb.instructor values   (1, 'Gary', 'Critten', 'gicritten@sky.com', 07756445520),   (2, 'Philippa', 'Smith', 'pip_smith@ghotmail.co.uk', 07789345562),  (3, 'Rachel', 'Hassan', 'rachas22@hotmail.com', 01054356689);--4 MEETING POINTSinsert into walkdb.meeting_point values ('DA144RU', 'Foots Cray Meadows', 'Sidcup', 'Kent', st_geomfromtext('POINT(547524.657 171130.575)',27700), 3);insert into walkdb.meeting_point values ('BR26HA', 'Keston Ponds', 'Keston', 'Kent', st_geomfromtext('POINT(541915.8 163997.0)',27700), 2);insert into walkdb.meeting_point values ('BR67JH', 'High Elms', 'Orpington', 'Kent', st_geomfromtext('POINT(544592.9 163453.2)',27700), 1);insert into walkdb.meeting_point values ('TN161QD', 'Chartwell and Toys Hill', 'Westerham', 'Kent', st_geomfromtext('POINT(545482.6 151669.9)',27700), 4);--4 CARPARKSinsert into walkdb.carpark values  ('001', 'High Elms Carpark - Shire Lane', 0.00, null,    st_geomfromtext('POLYGON((544567.5 163518.3, 544617.6 163562.7, 544589.0 163584.2, 544541.8 163539.8, 544567.5 163518.3))',27700));insert into walkdb.carpark values  ('002', 'Keston Ponds Carpark', 1.30, 'BR26BA',    st_geomfromtext('POLYGON((541902.9 163956.7, 541938.9 164001.5, 541912.0 164019.3, 541876.5 163975.3, 541902.9 163956.7))',27700));insert into walkdb.carpark values  ('003', 'Foots Cray Place Carpark', 0.00, null,    st_geomfromtext('POLYGON((547481.1 171034.7, 547581.1 171013.7, 547531.2 171037.0, 547502.2 171057.5, 547481.1 171034.7))',27700));insert into walkdb.carpark values  ('004', 'Chartwell National Trust Carpark', 3.00, 'TN161PS',    st_geomfromtext('POLYGON((545387.5 151280.9, 545513.6 151360.8, 545527.6 151399.6, 545473.0 151412.6, 545369.3 151325.3, 545387.5 151280.9))',27700));--4 CAFESinsert into walkdb.cafe values  ('001', 'Costa coffee', 'BR26BB', 'Keston',    st_geomfromtext('POLYHEDRALSURFACE(      ((541557.0 164136.9 0,      541569.5 164114.0 0,      541587.9 164127.8 0,      541574.5 164150.5 0,      541557.0 164136.9 0)),      ((541557.0 164136.9 0,      541569.5 164114.0 0,      541569.5 164114.0 10,      541557.0 164136.9 10,      541557.0 164136.9 0)),      ((541569.5 164114.0 0,      541587.9 164127.8 0,      541587.9 164127.8 10,      541569.5 164114.0 10,      541569.5 164114.0 0)),      ((541587.9 164127.8 0,      541574.5 164150.5 0,      541574.5 164150.5 10,      541587.9 164127.8 10,      541587.9 164127.8 0)),      ((541574.5 164150.5 0,      541557.0 164136.9 0,      541557.0 164136.9 10,      541574.5 164150.5 10,      541574.5 164150.5 0)),      ((541557.0 164136.9 10,      541569.5 164114.0 10,      541587.9 164127.8 10,      541574.5 164150.5 10,      541557.0 164136.9 10))      )',27700));insert into walkdb.cafe values  ('002', 'Crockham Tea Rooms', 'TN86PW', 'Edenbridge',    st_geomfromtext('POLYHEDRALSURFACE(      ((544921.0 150022.2 0,      544949.8 150023.6 0,      544950.6 150042.7 0,      544920.7 150041.9 0,      544921.0 150022.2 0)),      ((544921.0 150022.2 0,      544949.8 150023.6 0,      544949.8 150023.6 30,      544921.0 150022.2 30,      544921.0 150022.2 0)),      ((544949.8 150023.6 0,      544950.6 150042.7 0,      544950.6 150042.7 30,      544949.8 150023.6 30,      544949.8 150023.6 0)),      ((544950.6 150042.7 0,      544920.7 150041.9 0,      544920.7 150041.9 30,      544950.6 150042.7 30,      544950.6 150042.7 0)),      ((544920.7 150041.9 0,      544921.0 150022.2 0,      544921.0 150022.2 30,      544920.7 150041.9 30,      544920.7 150041.9 0)),      ((544921.0 150022.2 30,      544949.8 150023.6 30,      544950.6 150042.7 30,      544920.7 150041.9 30,      544921.0 150022.2 30))      )',27700));insert into walkdb.cafe values  ('003', 'Green Roof Cafe', 'BR67JH', 'Orpington',    st_geomfromtext('POLYHEDRALSURFACE(      ((544669.4 163412.5 0,      544717.3 163435.0 0,      544695.2 163480.5 0,      544645.2 163458.6 0,      544669.4 163412.5 0)),      ((544669.4 163412.5 0,      544717.3 163435.0 0,      544717.3 163435.0 15,      544669.4 163412.5 15,      544669.4 163412.5 0)),      ((544717.3 163435.0 0,      544695.2 163480.5 0,      544695.2 163480.5 15,      544717.3 163435.0 15,      544717.3 163435.0 0)),      ((544695.2 163480.5 0,      544645.2 163458.6 0,      544645.2 163458.6 15,      544695.2 163480.5 15,      544695.2 163480.5 0)),      ((544645.2 163458.6 0,      544669.4 163412.5 0,      544669.4 163412.5 15,      544645.2 163458.6 15,      544645.2 163458.6 0)),      ((544669.4 163412.5 15,      544717.3 163435.0 15,      544695.2 163480.5 15,      544645.2 163458.6 15,      544669.4 163412.5 15))      )',27700));insert into walkdb.cafe values  ('004', 'Costa coffee', 'DA144RU', 'Sidcup',    st_geomfromtext('POLYHEDRALSURFACE(      ((547427.9 171723.5 0,      547458.3 171710.7 0,      547463.9 171724.9 0,      547433.0 171737.6 0,      547427.9 171723.5 0)),      ((547427.9 171723.5 0,      547458.3 171710.7 0,      547458.3 171710.7 20,      547427.9 171723.5 20,      547427.9 171723.5 0)),      ((547458.3 171710.7 0,      547463.9 171724.9 0,      547463.9 171724.9 20,      547458.3 171710.7 20,      547458.3 171710.7 0)),      ((547463.9 171724.9 0,      547433.0 171737.6 0,      547433.0 171737.6 20,      547463.9 171724.9 20,      547463.9 171724.9 0)),      ((547433.0 171737.6 0,      547427.9 171723.5 0,      547427.9 171723.5 20,      547433.0 171737.6 20,      547433.0 171737.6 0)),      ((547427.9 171723.5 20,      547458.3 171710.7 20,      547463.9 171724.9 20,      547433.0 171737.6 20,      547427.9 171723.5 20))      )',27700));--5 ROUTESinsert into walkdb.route (route_id, name, difficulty, location, cafe_id) values  ('001', 'Keston Ponds', 'E',    st_geomfromtext('LINESTRING(      541884 164020,      541809 164337,      541833 164488,      541740 165004,      541584 165042,      541575 164687,      541698 164431,      541582 164077,      541672 163708,      541882 164006      )',27700), 1);insert into walkdb.route (route_id, name, difficulty, location, cafe_id) values  ('002', 'High Elms short trail', 'E',    st_geomfromtext('LINESTRING(      544590 163434,      544659 163289,      544744 163348,      544860 163109,      544572 162666,      544665 162271,      544929 162824,      544909 162894,      545115 163173,      545080 163241,      544999 163190,      544690 163516,      544605 163457      )',27700), 3);insert into walkdb.route (route_id, name, difficulty, location, cafe_id) values  ('003', 'High Elms long trail', 'M',    st_geomfromtext('LINESTRING(      544590 163434,      544648 163278,      544335 162976,      544517 162877,      544565 162695,      544453 162449,      544324 162323,      544531 162020,      544906 162830,      544896 162901,      545122 163195,      545080 163261,      544966 163194,      544699 163508,      544605 163457      )',27700), 3);insert into walkdb.route (route_id, name, difficulty, location, cafe_id) values  ('004', 'Foots Cray Meadows', 'M',    st_geomfromtext('LINESTRING(      547535 171132,      547791 171266,      548227 171734,      548551 172527,      548434 172551,      548270 172174,      548122 172217,      547949 171875,      547621 172014,      547430 171541,      547623 171327,      547524 171147      )',27700), 4);insert into walkdb.route (route_id, name, difficulty, location, cafe_id) values  ('005', 'Chartwell and Toys Hill', 'S',    st_geomfromtext('LINESTRING(      545461 151636,      545315 151386,      545133 151495,      545020 150973,      544891 150961,      544915 150011,      546641 150108,      546968 151289,      545905 152679,      545485 151639      )',27700), 2);--9 WALK EVENTSinsert into walkdb.walk_event values   ('2018-05-05', '12:00', 002, 0003, 'BR67JH'),  ('2018-05-27', '12:00', 003, 0002, 'DA144RU'),  ('2018-05-30', '11:30', 001, 0003, 'BR26HA'),  ('2018-06-09', '10:00', 005, 0001, 'TN161QD'),  ('2018-06-23', '12:00', 004, 0001, 'DA144RU'),  ('2018-07-14', '13:00', 005, 0001, 'TN161QD'),    ('2018-07-27', '10:00', 004, 0002, 'DA144RU'),    ('2018-08-12', '12:45', 001, 0001, 'BR26HA'),   ('2018-09-03', '11:00', 005, 0002, 'TN161QD');  --25 WALK ATTENDEESinsert into walkdb.walk_attendee values   ('2018-05-05', 1),  ('2018-05-05', 3),  ('2018-05-05', 4),  ('2018-05-05', 5);  insert into walkdb.walk_attendee values   ('2018-05-27', 1),  ('2018-05-27', 2);insert into walkdb.walk_attendee values   ('2018-05-30', 4),  ('2018-05-30', 5),  ('2018-05-30', 2);insert into walkdb.walk_attendee values   ('2018-06-9', 3),  ('2018-06-9', 4),  ('2018-06-9', 5);insert into walkdb.walk_attendee values   ('2018-06-23', 2),  ('2018-06-23', 3);  insert into walkdb.walk_attendee values   ('2018-07-14', 2),  ('2018-07-14', 3),  ('2018-07-14', 5);  insert into walkdb.walk_attendee values   ('2018-07-27', 3),    ('2018-07-27', 4),  ('2018-07-27', 5);insert into walkdb.walk_attendee values   ('2018-08-12', 2);insert into walkdb.walk_attendee values   ('2018-09-03', 1),  ('2018-09-03', 2),  ('2018-09-03', 4),  ('2018-09-03', 5);--Queries to answer the functional requirements--REQUIREMENT 1 --What is the distance from the carpark to the meeting point?select   a.name as "Meeting Point Name", b.name as "Carpark Name",   round(st_distance(a.location, b.location)::DECIMAL,2) as "Distance (m)"from   walkdb.meeting_point a left join  walkdb.carpark bon a.carpark_id = b.carpark_id;--REQUIREMENT 2--What is the length of each route?select a.route_id as "Route ID", a.name as "Route Name", round(st_length(a.location)::DECIMAL,2) as "Route Length"from walkdb.route a;--REQUIREMENT 3--Which members are going on a given walk event?select a.member_id as "Member ID",   b.first_name as "Member First Name",  b.last_name as "Member Last Name"from walkdb.walk_attendee a left join  walkdb.member b on a.member_id = b.member_idwhere a.walk_id = '2018-05-05';--REQUIREMENT 4--Which instructor is in charge of each walk event and what is their phone number?select   a.walk_date as "Walk Date", a.instructor as "Instructor ID",  b.first_name as "Instructor First Name", b.last_name as "Instructor Last Name",  b.phone_number as "Instructor Phone Number"from   walkdb.walk_event a left join   walkdb.instructor bon   a.instructor = b.instructor_idgroup by   a.walk_date, b.first_name, b.last_name, b.instructor_id;--REQUIREMENT 5--What is the area of each café?select   a.cafe_id as "Cafe ID", a.name as "Cafe Name",   round(st_area(a.location)::DECIMAL,2) as "Cafe Area (m2)"from   walkdb.cafe aorder by   "Cafe Area (m2)";--REQUIREMENT 6--What is the area of each carpark?select   a.carpark_id as "Carpark ID", a.name as "Carpark Name",   round(st_area(a.location)::DECIMAL,2) as "Carpark Area (m2)"from walkdb.carpark aorder by  "Carpark Area (m2)";--REQUIREMENT 7--How many walk events are scheduled for each difficultly?select   b.difficulty as "Difficulty",  count(*) as "Number of Walk Events"from walkdb.walk_event a left join   walkdb.route bon a.route = b.route_idgroup by b.difficultyorder by b.difficulty;--REQUIREMENT 8--How many walk events are being held each month?select  count(*) as "Number of Walk Events",  to_char(a.walk_date, 'Mon') as "Month",    extract(year from a.walk_date) as "Year"from walkdb.walk_event agroup by "Month", "Year"order by "Number of Walk Events";--REQUIREMENT 9--Do any given routes intersect?select  a.route_id as "Route 1 ID",  a.name as "Route 1 Name",  b.route_id as "Route 2 ID",  b.name as "Route 2 Name"from  walkdb.route a,  walkdb.route bwhere  a.route_id < b.route_id and  ST_Intersects(a.location, b.location);--REQUIREMENT 10-- Which meeting points are located within a carpark?select   a.postcode as "Meeting Point Postcode", a.name as "Meeting Point Name",  b.carpark_id as "Carpark ID", b.name as "Carpark Name"from   walkdb.meeting_point a, walkdb.carpark bwhere   st_contains(b.location, a.location) = 't';----REQUIREMENT 11 (extra)--How many members are going on each walk event, what is the route, and who is the instructor?select   a.walk_id as "Walk date", count(a.member_id) as "Number Attending",  c.route_id as "Route", c.name as "Route Name",  b.instructor as "Instructor ID"from   walkdb.walk_attendee a left join  walkdb.walk_event bon   a.walk_id = b.walk_date left join  walkdb.route con b.route = c.route_idgroup by   a.walk_id, b.instructor, c.route_id;